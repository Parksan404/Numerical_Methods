{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karwi\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\numer\\\\Numer-main\\\\src\\\\Linear Algebra\\\\Gauss_eliminate.js\";\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Card, Input, Button, Table } from 'antd';\nimport Desmos from 'desmos';\nimport { addStyles, EditableMathField } from 'react-mathquill';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlgebraLatex = require('algebra-latex');\n\nconst math = require('mathjs');\n\naddStyles();\nvar dataInTable = [];\nconst columns = [{\n  title: 'Iteration',\n  dataIndex: 'iteration',\n  key: 'iteration'\n}, {\n  title: 'X',\n  dataIndex: 'x',\n  key: 'x'\n}];\nvar A = [],\n    B = [],\n    answer = [],\n    matrixA = [],\n    matrixB = [];\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n    this.bi = this.bi.bind(this);\n    this.Ex = this.Ex.bind(this);\n    this.createTable = this.createTable.bind(this);\n    this.initMatrix = this.initMatrix.bind(this);\n    this.state = {\n      Dimension: null,\n      chDi: false\n    };\n  }\n\n  async Ex() {\n    // const url = \"https://api.randomuser.me/\";\n    const url = 'http://localhost:8000/data/gausselim'; // const url = \"http://127.0.0.1/Json/item.json\";\n\n    const response = await fetch(url);\n    console.log(response);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      Dimension: data.col\n    });\n    this.createMatrix(this.state.Dimension, this.state.Dimension);\n\n    for (var i = 0; i < this.state.Dimension; i++) {\n      for (var j = 0; j < this.state.Dimension; j++) {\n        document.getElementById('a' + (i + 1) + '' + (j + 1)).value = data.A[i][j];\n        document.getElementById('b' + (i + 1)).value = data.B[i][0];\n      }\n    }\n  }\n\n  initMatrix() {\n    for (var i = 0; i < this.state.Dimension; i++) {\n      A[i] = [];\n\n      for (var j = 0; j < this.state.Dimension; j++) {\n        A[i][j] = parseFloat(document.getElementById('a' + (i + 1) + '' + (j + 1)).value);\n      }\n\n      B.push(parseFloat(document.getElementById('b' + (i + 1)).value));\n    }\n\n    console.log('initMatrix');\n  }\n\n  cal() {\n    var X = []; // data[\"x\"] = [];\n\n    var n = this.state.Dimension;\n    console.log(A);\n    console.log(B);\n    this.initMatrix();\n\n    if (A[0][0] === 0) {\n      //pivoting\n      var tempRow = JSON.parse(JSON.stringify(A[0]));\n      var tempColumn = B[0];\n      A[0] = A[1];\n      A[1] = tempRow;\n      B[0] = B[1];\n      B[1] = tempColumn;\n    } //Forward eliminated\n\n\n    for (var k = 0; k < n; k++) {\n      for (var i = k + 1; i < n; i++) {\n        var factor = A[i][k] / A[k][k];\n\n        for (var j = k; j < n; j++) {\n          A[i][j] = A[i][j] - factor * A[k][j];\n        }\n\n        B[i] = B[i] - factor * B[k];\n      }\n    } //Backward Substitution\n    // X = new Array(n);\n\n\n    X[n - 1] = Math.round(B[n - 1] / A[n - 1][n - 1]); //find Xn\n\n    for (i = n - 2; i >= 0; i--) {\n      //find Xn-1 to X1\n      var sum = B[i];\n\n      for (j = i + 1; j < n; j++) {\n        sum = sum - A[i][j] * X[j];\n      }\n\n      console.log(sum, A[i][i]);\n      X[i] = Math.round(sum / A[i][i]);\n    }\n\n    this.createTable(X);\n  }\n\n  bi() {\n    this.cal(); // this.createTable(data[\"x\"]);\n\n    console.log('submit');\n  }\n\n  createTable(x) {\n    dataInTable = [];\n\n    for (var i = 0; i < x.length; i++) {\n      dataInTable.push({\n        iteration: 'X' + i,\n        x: x[i]\n      });\n    }\n\n    this.forceUpdate();\n  }\n\n  createMatrix(row, column) {\n    matrixA = [];\n    matrixB = [];\n    console.log(row + ' ' + column);\n\n    for (var i = 1; i <= row; i++) {\n      for (var j = 1; j <= column; j++) {\n        matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: '15%',\n            height: '50%',\n            backgroundColor: 'black',\n            marginInlineEnd: '5%',\n            marginBlockEnd: '5%',\n            color: 'white',\n            fontSize: '18px',\n            fontWeight: 'bold'\n          },\n          id: 'a' + i + '' + j,\n          placeholder: 'a' + i + '' + j\n        }, 'a' + i + '' + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this));\n      }\n\n      matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 26\n      }, this));\n      matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: '15%',\n          height: '50%',\n          backgroundColor: 'black',\n          marginInlineEnd: '5%',\n          marginBlockEnd: '5%',\n          color: 'white',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        id: 'b' + i,\n        placeholder: 'b' + i\n      }, 'b' + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this));\n      matrixB.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 26\n      }, this));\n    }\n\n    this.setState({\n      chDi: true\n    });\n    console.log(matrixA);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gauss Elimination\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Dimension\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: async e => {\n                await this.setState({\n                  Dimension: e.target.value\n                });\n                this.createMatrix(this.state.Dimension, this.state.Dimension);\n                this.forceUpdate(); //   console.log(this.state.Dimension);\n              },\n              value: this.state.Dimension,\n              name: \"Dimension\",\n              placeholder: \"Dimension\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.bi,\n              type: \"primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginLeft: '50%',\n                backgroundColor: '#d580ff',\n                borderColor: '#76D7C4'\n              },\n              onClick: this.Ex,\n              type: \"primary\",\n              children: \"Example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.chDi && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Input Matrix A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this), matrixA]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.chDi && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Input Matrix B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this), matrixB]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: 'Output',\n        bordered: true,\n        style: {\n          width: '100%',\n          background: '#2196f3',\n          color: '#FFFFFFFF'\n        },\n        id: \"outputCard\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          pagination: {\n            defaultPageSize: 5\n          },\n          columns: columns,\n          dataSource: dataInTable,\n          bodyStyle: {\n            fontWeight: 'bold',\n            fontSize: '18px',\n            color: 'black'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/karwi/OneDrive/เดสก์ท็อป/numer/Numer-main/src/Linear Algebra/Gauss_eliminate.js"],"names":["React","Component","Card","Input","Button","Table","Desmos","addStyles","EditableMathField","AlgebraLatex","require","math","dataInTable","columns","title","dataIndex","key","A","B","answer","matrixA","matrixB","Test","constructor","props","bi","bind","Ex","createTable","initMatrix","state","Dimension","chDi","url","response","fetch","console","log","data","json","setState","col","createMatrix","i","j","document","getElementById","value","parseFloat","push","cal","X","n","tempRow","JSON","parse","stringify","tempColumn","k","factor","Math","round","sum","x","length","iteration","forceUpdate","row","column","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","color","fontSize","fontWeight","render","e","target","marginLeft","borderColor","textAlign","background","defaultPageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'antd/dist/antd.css'\nimport { Card, Input, Button, Table } from 'antd'\nimport Desmos from 'desmos'\nimport { addStyles, EditableMathField } from 'react-mathquill'\nconst AlgebraLatex = require('algebra-latex')\nconst math = require('mathjs')\n\naddStyles()\n\nvar dataInTable = []\nconst columns = [\n    {\n        title: 'Iteration',\n        dataIndex: 'iteration',\n        key: 'iteration',\n    },\n    {\n        title: 'X',\n        dataIndex: 'x',\n        key: 'x',\n    },\n]\n\nvar A = [],\n    B = [],\n    answer = [],\n    matrixA = [],\n    matrixB = []\n\nexport default class Test extends Component {\n    constructor(props) {\n        super(props)\n        this.bi = this.bi.bind(this)\n        this.Ex = this.Ex.bind(this)\n        this.createTable = this.createTable.bind(this)\n        this.initMatrix = this.initMatrix.bind(this)\n        this.state = { Dimension: null, chDi: false }\n    }\n\n    async Ex() {\n        // const url = \"https://api.randomuser.me/\";\n        const url = 'http://localhost:8000/data/gausselim'\n        // const url = \"http://127.0.0.1/Json/item.json\";\n        const response = await fetch(url)\n        console.log(response)\n        const data = await response.json()\n        console.log(data)\n        this.setState({\n            Dimension: data.col,\n        })\n        this.createMatrix(this.state.Dimension, this.state.Dimension)\n\n        for (var i = 0; i < this.state.Dimension; i++) {\n            for (var j = 0; j < this.state.Dimension; j++) {\n                document.getElementById('a' + (i + 1) + '' + (j + 1)).value =\n                    data.A[i][j]\n                document.getElementById('b' + (i + 1)).value =\n                    data.B[i][0]\n            }\n        }\n    }\n\n    initMatrix() {\n        for (var i = 0; i < this.state.Dimension; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.Dimension; j++) {\n                A[i][j] = parseFloat(\n                    document.getElementById('a' + (i + 1) + '' + (j + 1)).value\n                )\n            }\n            B.push(parseFloat(document.getElementById('b' + (i + 1)).value))\n        }\n        console.log('initMatrix')\n    }\n\n    cal() {\n        var X = []\n        // data[\"x\"] = [];\n        var n = this.state.Dimension\n        console.log(A)\n        console.log(B)\n        this.initMatrix()\n        if (A[0][0] === 0) {\n            //pivoting\n            var tempRow = JSON.parse(JSON.stringify(A[0]))\n            var tempColumn = B[0]\n            A[0] = A[1]\n            A[1] = tempRow\n            B[0] = B[1]\n            B[1] = tempColumn\n        }\n        //Forward eliminated\n        for (var k = 0; k < n; k++) {\n            for (var i = k + 1; i < n; i++) {\n                var factor = A[i][k] / A[k][k]\n                for (var j = k; j < n; j++) {\n                    A[i][j] = A[i][j] - factor * A[k][j]\n                }\n                B[i] = B[i] - factor * B[k]\n            }\n        }\n        //Backward Substitution\n        // X = new Array(n);\n        X[n - 1] = Math.round(B[n - 1] / A[n - 1][n - 1]) //find Xn\n        for (i = n - 2; i >= 0; i--) {\n            //find Xn-1 to X1\n            var sum = B[i]\n            for (j = i + 1; j < n; j++) {\n                sum = sum - A[i][j] * X[j]\n            }\n            console.log(sum, A[i][i])\n            X[i] = Math.round(sum / A[i][i])\n        }\n        this.createTable(X)\n    }\n\n    bi() {\n        this.cal()\n        // this.createTable(data[\"x\"]);\n        console.log('submit')\n    }\n\n    createTable(x) {\n        dataInTable = []\n        for (var i = 0; i < x.length; i++) {\n            dataInTable.push({\n                iteration: 'X' + i,\n                x: x[i],\n            })\n        }\n        this.forceUpdate()\n    }\n\n    createMatrix(row, column) {\n        matrixA = []\n        matrixB = []\n        console.log(row + ' ' + column)\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(\n                    <Input\n                        style={{\n                            width: '15%',\n                            height: '50%',\n                            backgroundColor: 'black',\n                            marginInlineEnd: '5%',\n                            marginBlockEnd: '5%',\n                            color: 'white',\n                            fontSize: '18px',\n                            fontWeight: 'bold',\n                        }}\n                        id={'a' + i + '' + j}\n                        key={'a' + i + '' + j}\n                        placeholder={'a' + i + '' + j}\n                    />\n                )\n            }\n            matrixA.push(<br />)\n            matrixB.push(\n                <Input\n                    style={{\n                        width: '15%',\n                        height: '50%',\n                        backgroundColor: 'black',\n                        marginInlineEnd: '5%',\n                        marginBlockEnd: '5%',\n                        color: 'white',\n                        fontSize: '18px',\n                        fontWeight: 'bold',\n                    }}\n                    id={'b' + i}\n                    key={'b' + i}\n                    placeholder={'b' + i}\n                />\n            )\n            matrixB.push(<br />)\n        }\n        this.setState({ chDi: true })\n        console.log(matrixA)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Gauss Elimination</h1>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div>\n                            <p>Dimension</p>\n                            <Input\n                                onChange={async (e) => {\n                                    await this.setState({\n                                        Dimension: e.target.value,\n                                    })\n                                    this.createMatrix(\n                                        this.state.Dimension,\n                                        this.state.Dimension\n                                    )\n                                    this.forceUpdate()\n                                    //   console.log(this.state.Dimension);\n                                }}\n                                value={this.state.Dimension}\n                                name=\"Dimension\"\n                                placeholder=\"Dimension\"\n                            />\n                            <br></br>\n                            <br></br>\n                            <Button onClick={this.bi} type=\"primary\">\n                                Submit\n                            </Button>\n                            <Button\n                                style={{\n                                    marginLeft: '50%',\n                                    backgroundColor: '#d580ff',\n                                    borderColor: '#76D7C4',\n                                }}\n                                onClick={this.Ex}\n                                type=\"primary\"\n                            >\n                                Example\n                            </Button>\n                        </div>\n                        <br></br>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.chDi && (\n                            <div\n                                style={{\n                                    textAlign: 'right',\n                                }}\n                            >\n                                <h2>Input Matrix A</h2>\n                                {matrixA}\n                            </div>\n                        )}\n                    </div>\n                    <div className=\"col\">\n                        {this.state.chDi && (\n                            <div>\n                                <h2>Input Matrix B</h2>\n                                {matrixB}\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <br></br>\n                <br></br>\n                {/* {this.state.ans.map((data, i) => {\n          return (\n            <p>\n              Iteration No.{i + 1} Root of equation is {data}\n            </p>\n          );\n        })} */}\n                <Card\n                    title={'Output'}\n                    bordered={true}\n                    style={{\n                        width: '100%',\n                        background: '#2196f3',\n                        color: '#FFFFFFFF',\n                    }}\n                    id=\"outputCard\"\n                >\n                    <Table\n                        pagination={{ defaultPageSize: 5 }}\n                        columns={columns}\n                        dataSource={dataInTable}\n                        bodyStyle={{\n                            fontWeight: 'bold',\n                            fontSize: '18px',\n                            color: 'black',\n                        }}\n                    ></Table>\n                </Card>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}