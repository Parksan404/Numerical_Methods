{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karwi\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\numer\\\\Numer-main\\\\src\\\\Regression\\\\Linear.js\";\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Card, Input, Button, Table } from 'antd';\nimport Desmos from 'desmos';\nimport { addStyles, EditableMathField } from 'react-mathquill';\nimport regression from 'regression';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlgebraLatex = require('algebra-latex');\n\nconst math = require('mathjs');\n\naddStyles();\nvar dataInTable = [];\nvar columns2 = [{\n  title: 'Ans',\n  dataIndex: 'Ans',\n  key: 'Ans'\n}];\nvar columns1 = [{\n  title: 'No.',\n  dataIndex: 'no',\n  key: 'no'\n}, {\n  title: 'X',\n  dataIndex: 'x',\n  key: 'x'\n}, {\n  title: 'Y',\n  dataIndex: 'y',\n  key: 'y'\n}];\nvar x = [],\n    y = [],\n    tableTag = [],\n    answer;\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n    this.bi = this.bi.bind(this);\n    this.Ex = this.Ex.bind(this);\n    this.state = {\n      nPoints: null,\n      ans: [],\n      showTableInput: false,\n      showTableInpu2: false\n    };\n    this.elt = {};\n    this.calculator = {};\n  } //API\n\n\n  async Ex() {\n    // const url = \"https://api.randomuser.me/\";\n    const url = 'http://localhost:8000/data/lr'; // const url = \"http://localhost:8000/Newton\";\n    // const url = \"http://127.0.0.1/Json/item.json\";\n\n    const response = await fetch(url);\n    console.log(response);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      nPoints: data.col,\n      X: data.Xi\n    });\n    console.log('nPoints', this.state.nPoints);\n    this.createTableInput(parseInt(this.state.nPoints));\n\n    for (var i = 0; i < this.state.nPoints; i++) {\n      document.getElementById('x' + (i + 1)).value = data.X[i];\n      document.getElementById('y' + (i + 1)).value = data.Y[i];\n    }\n\n    this.forceUpdate();\n  }\n\n  componentDidMount() {//ทำอัตโนมัติหลังจาก render เสร็จ\n  }\n\n  componentDidUpdate() {}\n\n  initialValue() {\n    x = [];\n    y = [];\n\n    for (var i = 0; i < this.state.nPoints; i++) {\n      x[i] = parseFloat(document.getElementById('x' + (i + 1)).value);\n      y[i] = parseFloat(document.getElementById('y' + (i + 1)).value);\n    }\n\n    console.log('X', this.state.X);\n    console.log('x', x);\n    console.log('y', y);\n    console.log('initialValue');\n  }\n\n  cal(nPoints) {\n    console.log('x', x);\n    console.log('y', y);\n    console.log('nPoints', nPoints);\n\n    if (x.length !== 0 && y.length !== 0) {\n      var arr = [];\n      var xi = this.state.X;\n\n      for (let i = 0; i < nPoints; i++) {\n        arr.push([x[i], y[i]]);\n      }\n\n      console.log(arr);\n      console.log(regression.linear(arr, {\n        precision: 6\n      }).predict(xi)[1]);\n    }\n\n    answer = regression.linear(arr, {\n      precision: 6\n    }).predict(xi)[1];\n  }\n\n  bi() {\n    dataInTable = [];\n    this.initialValue();\n    this.cal(this.state.nPoints);\n    console.log('answer', answer);\n    dataInTable.push({\n      Ans: answer\n    });\n    this.forceUpdate();\n    console.log('end');\n  }\n\n  createTableInput(n) {\n    x = [];\n    y = [];\n    tableTag = [];\n\n    for (var i = 1; i <= n; i++) {\n      x.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: '100%',\n          height: '50%',\n          backgroundColor: 'black',\n          marginInlineEnd: '5%',\n          marginBlockEnd: '5%',\n          color: 'white',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        id: 'x' + i,\n        placeholder: 'x' + i\n      }, 'x' + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this));\n      y.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: '100%',\n          height: '50%',\n          backgroundColor: 'black',\n          marginInlineEnd: '5%',\n          marginBlockEnd: '5%',\n          color: 'white',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        id: 'y' + i,\n        placeholder: 'y' + i\n      }, 'y' + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this));\n      tableTag.push({\n        no: i,\n        x: x[i - 1],\n        y: y[i - 1]\n      });\n    }\n\n    this.setState({\n      showTableInput: true\n    });\n    console.log(x, y, tableTag);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Linear Regression\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Number of points (n)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: async e => {\n                await this.setState({\n                  nPoints: e.target.value\n                });\n                this.createTableInput(parseInt(this.state.nPoints));\n                this.forceUpdate();\n              },\n              value: this.state.nPoints,\n              name: \"nPoints\",\n              placeholder: \"Number of points (n)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => {\n                this.setState({\n                  X: e.target.value\n                });\n                this.forceUpdate();\n              },\n              value: this.state.X,\n              name: \"X\",\n              placeholder: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.bi,\n              type: \"primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginLeft: '73%',\n                backgroundColor: '#d580ff',\n                borderColor: '#76D7C4'\n              },\n              onClick: this.Ex,\n              type: \"primary\",\n              children: \"Example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.showTableInput && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              columns: columns1,\n              dataSource: tableTag,\n              pagination: false,\n              bordered: true,\n              bodyStyle: {\n                fontWeight: 'bold',\n                fontSize: '18px',\n                color: 'white',\n                overflowY: 'scroll',\n                minWidth: 120,\n                maxHeight: 300\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: 'Output',\n        bordered: true,\n        style: {\n          width: '100%',\n          background: '#2196f3',\n          color: '#FFFFFFFF'\n        },\n        id: \"outputCard\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          pagination: {\n            defaultPageSize: 5\n          },\n          columns: columns2,\n          dataSource: dataInTable,\n          pagination1: false,\n          bordered: true,\n          bodyStyle: {\n            fontWeight: 'bold',\n            fontSize: '18px',\n            color: 'black'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/karwi/OneDrive/เดสก์ท็อป/numer/Numer-main/src/Regression/Linear.js"],"names":["React","Component","Card","Input","Button","Table","Desmos","addStyles","EditableMathField","regression","AlgebraLatex","require","math","dataInTable","columns2","title","dataIndex","key","columns1","x","y","tableTag","answer","Test","constructor","props","bi","bind","Ex","state","nPoints","ans","showTableInput","showTableInpu2","elt","calculator","url","response","fetch","console","log","data","json","setState","col","X","Xi","createTableInput","parseInt","i","document","getElementById","value","Y","forceUpdate","componentDidMount","componentDidUpdate","initialValue","parseFloat","cal","length","arr","xi","push","linear","precision","predict","Ans","n","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","color","fontSize","fontWeight","no","render","e","target","marginLeft","borderColor","overflowY","minWidth","maxHeight","background","defaultPageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'antd/dist/antd.css'\nimport { Card, Input, Button, Table } from 'antd'\nimport Desmos from 'desmos'\nimport { addStyles, EditableMathField } from 'react-mathquill'\nimport regression from 'regression'\nconst AlgebraLatex = require('algebra-latex')\nconst math = require('mathjs')\n\naddStyles()\n\nvar dataInTable = []\nvar columns2 = [\n    {\n        title: 'Ans',\n        dataIndex: 'Ans',\n        key: 'Ans',\n    },\n]\n\nvar columns1 = [\n    {\n        title: 'No.',\n        dataIndex: 'no',\n        key: 'no',\n    },\n    {\n        title: 'X',\n        dataIndex: 'x',\n        key: 'x',\n    },\n    {\n        title: 'Y',\n        dataIndex: 'y',\n        key: 'y',\n    },\n]\n\nvar x = [],\n    y = [],\n    tableTag = [],\n    answer\n\nexport default class Test extends Component {\n    constructor(props) {\n        super(props)\n        this.bi = this.bi.bind(this)\n        this.Ex = this.Ex.bind(this)\n        this.state = {\n            nPoints: null,\n            ans: [],\n            showTableInput: false,\n            showTableInpu2: false,\n        }\n        this.elt = {}\n        this.calculator = {}\n    }\n    //API\n    async Ex() {\n        // const url = \"https://api.randomuser.me/\";\n        const url = 'http://localhost:8000/data/lr'\n        // const url = \"http://localhost:8000/Newton\";\n        // const url = \"http://127.0.0.1/Json/item.json\";\n        const response = await fetch(url)\n        console.log(response)\n        const data = await response.json()\n        console.log(data)\n        this.setState({\n            nPoints: data.col,\n            X: data.Xi,\n        })\n        console.log('nPoints', this.state.nPoints)\n        this.createTableInput(parseInt(this.state.nPoints))\n\n        for (var i = 0; i < this.state.nPoints; i++) {\n            document.getElementById('x' + (i + 1)).value = data.X[i]\n            document.getElementById('y' + (i + 1)).value = data.Y[i]\n        }\n\n        this.forceUpdate()\n    }\n\n    componentDidMount() {\n        //ทำอัตโนมัติหลังจาก render เสร็จ\n    }\n    componentDidUpdate() {}\n\n    initialValue() {\n        x = []\n        y = []\n        for (var i = 0; i < this.state.nPoints; i++) {\n            x[i] = parseFloat(document.getElementById('x' + (i + 1)).value)\n            y[i] = parseFloat(document.getElementById('y' + (i + 1)).value)\n        }\n        console.log('X', this.state.X)\n        console.log('x', x)\n        console.log('y', y)\n        console.log('initialValue')\n    }\n\n    cal(nPoints) {\n        console.log('x', x)\n        console.log('y', y)\n        console.log('nPoints', nPoints)\n        if (x.length !== 0 && y.length !== 0) {\n            var arr = []\n            var xi = this.state.X\n            for (let i = 0; i < nPoints; i++) {\n                arr.push([x[i], y[i]])\n            }\n            console.log(arr)\n            console.log(\n                regression\n                    .linear(arr, {\n                        precision: 6,\n                    })\n                    .predict(xi)[1]\n            )\n        }\n        answer = regression\n            .linear(arr, {\n                precision: 6,\n            })\n            .predict(xi)[1]\n    }\n\n    bi() {\n        dataInTable = []\n        this.initialValue()\n        this.cal(this.state.nPoints)\n        console.log('answer', answer)\n        dataInTable.push({\n            Ans: answer,\n        })\n        this.forceUpdate()\n        console.log('end')\n    }\n\n    createTableInput(n) {\n        x = []\n        y = []\n        tableTag = []\n        for (var i = 1; i <= n; i++) {\n            x.push(\n                <Input\n                    style={{\n                        width: '100%',\n                        height: '50%',\n                        backgroundColor: 'black',\n                        marginInlineEnd: '5%',\n                        marginBlockEnd: '5%',\n                        color: 'white',\n                        fontSize: '18px',\n                        fontWeight: 'bold',\n                    }}\n                    id={'x' + i}\n                    key={'x' + i}\n                    placeholder={'x' + i}\n                />\n            )\n            y.push(\n                <Input\n                    style={{\n                        width: '100%',\n                        height: '50%',\n                        backgroundColor: 'black',\n                        marginInlineEnd: '5%',\n                        marginBlockEnd: '5%',\n                        color: 'white',\n                        fontSize: '18px',\n                        fontWeight: 'bold',\n                    }}\n                    id={'y' + i}\n                    key={'y' + i}\n                    placeholder={'y' + i}\n                />\n            )\n            tableTag.push({\n                no: i,\n                x: x[i - 1],\n                y: y[i - 1],\n            })\n        }\n\n        this.setState({\n            showTableInput: true,\n        })\n        console.log(x, y, tableTag)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Linear Regression</h1>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div>\n                            <p>Number of points (n)</p>\n                            <Input\n                                onChange={async (e) => {\n                                    await this.setState({\n                                        nPoints: e.target.value,\n                                    })\n                                    this.createTableInput(\n                                        parseInt(this.state.nPoints)\n                                    )\n                                    this.forceUpdate()\n                                }}\n                                value={this.state.nPoints}\n                                name=\"nPoints\"\n                                placeholder=\"Number of points (n)\"\n                            />\n                            <p>X</p>\n                            <Input\n                                onChange={(e) => {\n                                    this.setState({ X: e.target.value })\n                                    this.forceUpdate()\n                                }}\n                                value={this.state.X}\n                                name=\"X\"\n                                placeholder=\"X\"\n                            />\n                            <br></br>\n                            <br></br>\n                            <Button onClick={this.bi} type=\"primary\">\n                                Submit\n                            </Button>\n                            <Button\n                                style={{\n                                    marginLeft: '73%',\n                                    backgroundColor: '#d580ff',\n                                    borderColor: '#76D7C4',\n                                }}\n                                onClick={this.Ex}\n                                type=\"primary\"\n                            >\n                                Example\n                            </Button>\n                        </div>\n                        <br></br>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showTableInput && (\n                            <div>\n                                <Table\n                                    columns={columns1}\n                                    dataSource={tableTag}\n                                    pagination={false}\n                                    bordered={true}\n                                    bodyStyle={{\n                                        fontWeight: 'bold',\n                                        fontSize: '18px',\n                                        color: 'white',\n                                        overflowY: 'scroll',\n                                        minWidth: 120,\n                                        maxHeight: 300,\n                                    }}\n                                ></Table>\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                <Card\n                    title={'Output'}\n                    bordered={true}\n                    style={{\n                        width: '100%',\n                        background: '#2196f3',\n                        color: '#FFFFFFFF',\n                    }}\n                    id=\"outputCard\"\n                >\n                    <Table\n                        pagination={{ defaultPageSize: 5 }}\n                        columns={columns2}\n                        dataSource={dataInTable}\n                        pagination1={false}\n                        bordered={true}\n                        bodyStyle={{\n                            fontWeight: 'bold',\n                            fontSize: '18px',\n                            color: 'black',\n                        }}\n                    ></Table>\n                </Card>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}