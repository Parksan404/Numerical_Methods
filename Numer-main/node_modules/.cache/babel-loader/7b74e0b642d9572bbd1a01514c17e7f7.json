{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karwi\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\numer\\\\Numer-main\\\\src\\\\Linear Algebra\\\\Jacobi.js\";\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Card, Input, Button, Table } from 'antd';\nimport Desmos from 'desmos';\nimport { addStyles, EditableMathField } from 'react-mathquill';\nimport { lusolve, format } from 'mathjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlgebraLatex = require('algebra-latex');\n\nconst math = require('mathjs');\n\naddStyles();\nvar dataInTable = [];\nvar A = [],\n    B = [],\n    answer = [],\n    matrixA = [],\n    matrixB = [],\n    matrixX = [],\n    epsilon,\n    count = 1,\n    x = [];\nvar columns = [{\n  title: 'Iteration',\n  dataIndex: 'iteration',\n  key: 'iteration'\n}];\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n    this.bi = this.bi.bind(this);\n    this.Ex = this.Ex.bind(this);\n    this.createTable = this.createTable.bind(this);\n    this.initMatrix = this.initMatrix.bind(this);\n    this.state = {\n      Dimension: null,\n      chDi: false,\n      showOutputCard: false\n    };\n  } //API\n\n\n  async Ex() {\n    // const url = \"https://api.randomuser.me/\";\n    const url = 'http://localhost:8000/data/jacobi'; // const url = \"http://127.0.0.1/Json/item.json\";\n\n    const response = await fetch(url);\n    console.log(response);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      Dimension: data.col\n    });\n    this.createMatrix(this.state.Dimension, this.state.Dimension);\n\n    for (var i = 0; i < this.state.Dimension; i++) {\n      for (var j = 0; j < this.state.Dimension; j++) {\n        document.getElementById('a' + (i + 1) + '' + (j + 1)).value = data.A[i][j];\n        document.getElementById('b' + (i + 1)).value = data.B[i][0];\n        document.getElementById('x' + (i + 1)).value = data.X[i];\n      }\n    }\n\n    this.initialSchema(this.state.Dimension);\n  }\n\n  componentDidMount() {//ทำอัตโนมัติหลังจาก render เสร็จ\n    // this.initialSchema(this.state.Dimension);\n  }\n\n  initMatrix() {\n    for (var i = 0; i < this.state.Dimension; i++) {\n      A[i] = [];\n\n      for (var j = 0; j < this.state.Dimension; j++) {\n        A[i][j] = parseFloat(document.getElementById('a' + (i + 1) + '' + (j + 1)).value);\n      }\n\n      B.push(parseFloat(document.getElementById('b' + (i + 1)).value));\n      x.push(parseFloat(document.getElementById('x' + (i + 1)).value));\n    }\n\n    console.log('initMatrix');\n    console.log(x);\n  }\n\n  cal() {\n    var n = this.state.Dimension;\n    this.initMatrix();\n    var temp;\n    var xold;\n    epsilon = new Array(n);\n    console.log('while');\n\n    do {\n      temp = [];\n      xold = JSON.parse(JSON.stringify(x));\n\n      for (var i = 0; i < n; i++) {\n        var sum = 0;\n\n        for (var j = 0; j < n; j++) {\n          if (i !== j) {\n            //else i == j That is a divide number\n            sum = sum + A[i][j] * x[j];\n          }\n        }\n\n        temp[i] = (B[i] - sum) / A[i][i]; //update x[i]\n      }\n\n      x = JSON.parse(JSON.stringify(temp));\n      console.log('count', count);\n\n      if (count >= 1000) {\n        break;\n      }\n    } while (this.error(x, xold)); //if true , continue next iteration\n\n\n    this.setState({\n      showOutputCard: true\n    });\n  }\n\n  error(xnew, xold) {\n    for (var i = 0; i < xnew.length; i++) {\n      epsilon[i] = Math.abs((xnew[i] - xold[i]) / xnew[i]);\n\n      if (x[i] == null) {\n        return true;\n      }\n    }\n\n    this.appendTable(x, epsilon);\n\n    for (i = 0; i < epsilon.length; i++) {\n      if (epsilon[i] > 0.000001) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  appendTable(x, error) {\n    console.log('appendTable');\n    console.log(x, error);\n    var tag = '';\n    tag += '{\"iteration\": ' + count++ + ',';\n\n    for (var i = 0; i < x.length; i++) {\n      tag += '\"x' + (i + 1) + '\": ' + x[i].toFixed(8) + ', \"error' + (i + 1) + '\": ' + error[i].toFixed(8);\n\n      if (i !== x.length - 1) {\n        tag += ',';\n      }\n    }\n\n    tag += '}';\n    dataInTable.push(JSON.parse(tag));\n    console.log(dataInTable);\n    this.forceUpdate();\n  }\n\n  bi() {\n    this.cal(); // this.createTable(data[\"x\"]);\n\n    console.log('submit');\n  }\n\n  createTable(x) {\n    dataInTable = [];\n\n    for (var i = 0; i < x.length; i++) {\n      dataInTable.push({\n        iteration: 'X' + i,\n        x: x[i]\n      });\n    }\n\n    this.forceUpdate();\n  }\n\n  createMatrix(row, column) {\n    matrixA = [];\n    matrixB = [];\n    matrixX = [];\n    console.log(row + ' ' + column);\n\n    for (var i = 1; i <= row; i++) {\n      for (var j = 1; j <= column; j++) {\n        matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: '15%',\n            height: '50%',\n            backgroundColor: 'black',\n            marginInlineEnd: '5%',\n            marginBlockEnd: '5%',\n            color: 'white',\n            fontSize: '18px',\n            fontWeight: 'bold'\n          },\n          id: 'a' + i + '' + j,\n          placeholder: 'a' + i + '' + j\n        }, 'a' + i + '' + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this));\n      }\n\n      matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 26\n      }, this));\n      matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: '15%',\n          height: '50%',\n          backgroundColor: 'black',\n          marginInlineEnd: '5%',\n          marginBlockEnd: '5%',\n          color: 'white',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        id: 'b' + i,\n        placeholder: 'b' + i\n      }, 'b' + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this));\n      matrixB.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 26\n      }, this));\n      matrixX.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: '18%',\n          height: '50%',\n          backgroundColor: 'black',\n          marginInlineEnd: '5%',\n          marginBlockEnd: '5%',\n          color: 'white',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        id: 'x' + i,\n        placeholder: 'x' + i\n      }, 'x' + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this));\n    }\n\n    this.setState({\n      chDi: true\n    });\n    console.log('matrixX');\n    console.log(matrixX);\n  }\n\n  initialSchema(n) {\n    for (var i = 1; i <= n; i++) {\n      columns.push({\n        title: 'X' + i,\n        dataIndex: 'x' + i,\n        key: 'x' + i\n      });\n    }\n\n    for (i = 1; i <= n; i++) {\n      columns.push({\n        title: 'Error' + i,\n        dataIndex: 'error' + i,\n        key: 'error' + i\n      });\n    }\n\n    console.log('initialSchema');\n    console.log(columns);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Jacobi Iteration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Dimension\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: async e => {\n                await this.setState({\n                  Dimension: e.target.value\n                });\n                this.createMatrix(this.state.Dimension, this.state.Dimension);\n                this.forceUpdate(); //   console.log(this.state.Dimension);\n              },\n              value: this.state.Dimension,\n              name: \"Dimension\",\n              placeholder: \"Dimension\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.bi,\n              type: \"primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginLeft: '50%',\n                backgroundColor: '#d580ff',\n                borderColor: '#76D7C4'\n              },\n              onClick: this.Ex,\n              type: \"primary\",\n              children: \"Example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.chDi && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'right'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Input Matrix A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 33\n            }, this), matrixA]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.chDi && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Input Matrix B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 33\n            }, this), matrixB]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), this.state.chDi && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Input Matrix X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }, this), matrixX]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }, this), this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n        title: 'Output',\n        bordered: true,\n        style: {\n          width: '100%',\n          background: '#2196f3',\n          color: '#FFFFFFFF'\n        },\n        id: \"outputCard\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          pagination: {\n            defaultPageSize: 5\n          },\n          columns: columns // bordered\n          ,\n          dataSource: dataInTable,\n          bodyStyle: {\n            fontWeight: 'bold',\n            fontSize: '18px',\n            color: 'black'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/karwi/OneDrive/เดสก์ท็อป/numer/Numer-main/src/Linear Algebra/Jacobi.js"],"names":["React","Component","Card","Input","Button","Table","Desmos","addStyles","EditableMathField","lusolve","format","AlgebraLatex","require","math","dataInTable","A","B","answer","matrixA","matrixB","matrixX","epsilon","count","x","columns","title","dataIndex","key","Test","constructor","props","bi","bind","Ex","createTable","initMatrix","state","Dimension","chDi","showOutputCard","url","response","fetch","console","log","data","json","setState","col","createMatrix","i","j","document","getElementById","value","X","initialSchema","componentDidMount","parseFloat","push","cal","n","temp","xold","Array","JSON","parse","stringify","sum","error","xnew","length","Math","abs","appendTable","tag","toFixed","forceUpdate","iteration","row","column","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","color","fontSize","fontWeight","render","e","target","marginLeft","borderColor","textAlign","background","defaultPageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'antd/dist/antd.css'\nimport { Card, Input, Button, Table } from 'antd'\nimport Desmos from 'desmos'\nimport { addStyles, EditableMathField } from 'react-mathquill'\nimport { lusolve, format } from 'mathjs'\nconst AlgebraLatex = require('algebra-latex')\nconst math = require('mathjs')\n\naddStyles()\n\nvar dataInTable = []\n\nvar A = [],\n    B = [],\n    answer = [],\n    matrixA = [],\n    matrixB = [],\n    matrixX = [],\n    epsilon,\n    count = 1,\n    x = []\n\nvar columns = [\n    {\n        title: 'Iteration',\n        dataIndex: 'iteration',\n        key: 'iteration',\n    },\n]\n\nexport default class Test extends Component {\n    constructor(props) {\n        super(props)\n        this.bi = this.bi.bind(this)\n        this.Ex = this.Ex.bind(this)\n        this.createTable = this.createTable.bind(this)\n        this.initMatrix = this.initMatrix.bind(this)\n        this.state = { Dimension: null, chDi: false, showOutputCard: false }\n    }\n    //API\n    async Ex() {\n        // const url = \"https://api.randomuser.me/\";\n        const url = 'http://localhost:8000/data/jacobi'\n        // const url = \"http://127.0.0.1/Json/item.json\";\n        const response = await fetch(url)\n        console.log(response)\n        const data = await response.json()\n        console.log(data)\n        this.setState({\n            Dimension: data.col,\n        })\n        this.createMatrix(this.state.Dimension, this.state.Dimension)\n\n        for (var i = 0; i < this.state.Dimension; i++) {\n            for (var j = 0; j < this.state.Dimension; j++) {\n                document.getElementById('a' + (i + 1) + '' + (j + 1)).value =\n                    data.A[i][j]\n                document.getElementById('b' + (i + 1)).value =\n                    data.B[i][0]\n                document.getElementById('x' + (i + 1)).value = data.X[i]\n            }\n        }\n        this.initialSchema(this.state.Dimension)\n    }\n\n    componentDidMount() {\n        //ทำอัตโนมัติหลังจาก render เสร็จ\n        // this.initialSchema(this.state.Dimension);\n    }\n\n    initMatrix() {\n        for (var i = 0; i < this.state.Dimension; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.Dimension; j++) {\n                A[i][j] = parseFloat(\n                    document.getElementById('a' + (i + 1) + '' + (j + 1)).value\n                )\n            }\n            B.push(parseFloat(document.getElementById('b' + (i + 1)).value))\n            x.push(parseFloat(document.getElementById('x' + (i + 1)).value))\n        }\n        console.log('initMatrix')\n        console.log(x)\n    }\n\n    cal() {\n        var n = this.state.Dimension\n        this.initMatrix()\n        var temp\n        var xold\n        epsilon = new Array(n)\n        console.log('while')\n        do {\n            temp = []\n            xold = JSON.parse(JSON.stringify(x))\n            for (var i = 0; i < n; i++) {\n                var sum = 0\n                for (var j = 0; j < n; j++) {\n                    if (i !== j) {\n                        //else i == j That is a divide number\n                        sum = sum + A[i][j] * x[j]\n                    }\n                }\n                temp[i] = (B[i] - sum) / A[i][i] //update x[i]\n            }\n            x = JSON.parse(JSON.stringify(temp))\n            console.log('count', count)\n            if (count >= 1000) {\n                break\n            }\n        } while (this.error(x, xold)) //if true , continue next iteration\n        this.setState({\n            showOutputCard: true,\n        })\n    }\n\n    error(xnew, xold) {\n        for (var i = 0; i < xnew.length; i++) {\n            epsilon[i] = Math.abs((xnew[i] - xold[i]) / xnew[i])\n            if (x[i] == null) {\n                return true\n            }\n        }\n\n        this.appendTable(x, epsilon)\n        for (i = 0; i < epsilon.length; i++) {\n            if (epsilon[i] > 0.000001) {\n                return true\n            }\n        }\n        return false\n    }\n\n    appendTable(x, error) {\n        console.log('appendTable')\n        console.log(x, error)\n        var tag = ''\n        tag += '{\"iteration\": ' + count++ + ','\n        for (var i = 0; i < x.length; i++) {\n            tag +=\n                '\"x' +\n                (i + 1) +\n                '\": ' +\n                x[i].toFixed(8) +\n                ', \"error' +\n                (i + 1) +\n                '\": ' +\n                error[i].toFixed(8)\n            if (i !== x.length - 1) {\n                tag += ','\n            }\n        }\n        tag += '}'\n        dataInTable.push(JSON.parse(tag))\n        console.log(dataInTable)\n        this.forceUpdate()\n    }\n\n    bi() {\n        this.cal()\n        // this.createTable(data[\"x\"]);\n        console.log('submit')\n    }\n\n    createTable(x) {\n        dataInTable = []\n        for (var i = 0; i < x.length; i++) {\n            dataInTable.push({\n                iteration: 'X' + i,\n                x: x[i],\n            })\n        }\n        this.forceUpdate()\n    }\n\n    createMatrix(row, column) {\n        matrixA = []\n        matrixB = []\n        matrixX = []\n        console.log(row + ' ' + column)\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(\n                    <Input\n                        style={{\n                            width: '15%',\n                            height: '50%',\n                            backgroundColor: 'black',\n                            marginInlineEnd: '5%',\n                            marginBlockEnd: '5%',\n                            color: 'white',\n                            fontSize: '18px',\n                            fontWeight: 'bold',\n                        }}\n                        id={'a' + i + '' + j}\n                        key={'a' + i + '' + j}\n                        placeholder={'a' + i + '' + j}\n                    />\n                )\n            }\n            matrixA.push(<br />)\n            matrixB.push(\n                <Input\n                    style={{\n                        width: '15%',\n                        height: '50%',\n                        backgroundColor: 'black',\n                        marginInlineEnd: '5%',\n                        marginBlockEnd: '5%',\n                        color: 'white',\n                        fontSize: '18px',\n                        fontWeight: 'bold',\n                    }}\n                    id={'b' + i}\n                    key={'b' + i}\n                    placeholder={'b' + i}\n                />\n            )\n            matrixB.push(<br />)\n            matrixX.push(\n                <Input\n                    style={{\n                        width: '18%',\n                        height: '50%',\n                        backgroundColor: 'black',\n                        marginInlineEnd: '5%',\n                        marginBlockEnd: '5%',\n                        color: 'white',\n                        fontSize: '18px',\n                        fontWeight: 'bold',\n                    }}\n                    id={'x' + i}\n                    key={'x' + i}\n                    placeholder={'x' + i}\n                />\n            )\n        }\n        this.setState({ chDi: true })\n        console.log('matrixX')\n        console.log(matrixX)\n    }\n\n    initialSchema(n) {\n        for (var i = 1; i <= n; i++) {\n            columns.push({\n                title: 'X' + i,\n                dataIndex: 'x' + i,\n                key: 'x' + i,\n            })\n        }\n        for (i = 1; i <= n; i++) {\n            columns.push({\n                title: 'Error' + i,\n                dataIndex: 'error' + i,\n                key: 'error' + i,\n            })\n        }\n        console.log('initialSchema')\n        console.log(columns)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Jacobi Iteration</h1>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div>\n                            <p>Dimension</p>\n                            <Input\n                                onChange={async (e) => {\n                                    await this.setState({\n                                        Dimension: e.target.value,\n                                    })\n                                    this.createMatrix(\n                                        this.state.Dimension,\n                                        this.state.Dimension\n                                    )\n\n                                    this.forceUpdate()\n                                    //   console.log(this.state.Dimension);\n                                }}\n                                value={this.state.Dimension}\n                                name=\"Dimension\"\n                                placeholder=\"Dimension\"\n                            />\n                            <br></br>\n                            <br></br>\n                            <Button onClick={this.bi} type=\"primary\">\n                                Submit\n                            </Button>\n                            <Button\n                                style={{\n                                    marginLeft: '50%',\n                                    backgroundColor: '#d580ff',\n                                    borderColor: '#76D7C4',\n                                }}\n                                onClick={this.Ex}\n                                type=\"primary\"\n                            >\n                                Example\n                            </Button>\n                        </div>\n                        <br></br>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.chDi && (\n                            <div\n                                style={{\n                                    textAlign: 'right',\n                                }}\n                            >\n                                <h2>Input Matrix A</h2>\n                                {matrixA}\n                            </div>\n                        )}\n                    </div>\n                    <div className=\"col\">\n                        {this.state.chDi && (\n                            <div>\n                                <h2>Input Matrix B</h2>\n                                {matrixB}\n                            </div>\n                        )}\n                    </div>\n                </div>\n                {this.state.chDi && (\n                    <div>\n                        <h2>Input Matrix X</h2>\n                        {matrixX}\n                    </div>\n                )}\n                {/* {this.state.ans.map((data, i) => {\n          return (\n            <p>\n              Iteration No.{i + 1} Root of equation is {data}\n            </p>\n          );\n        })} */}\n                {this.state.showOutputCard && (\n                    <Card\n                        title={'Output'}\n                        bordered={true}\n                        style={{\n                            width: '100%',\n                            background: '#2196f3',\n                            color: '#FFFFFFFF',\n                        }}\n                        id=\"outputCard\"\n                    >\n                        <Table\n                            pagination={{ defaultPageSize: 5 }}\n                            columns={columns}\n                            // bordered\n                            dataSource={dataInTable}\n                            bodyStyle={{\n                                fontWeight: 'bold',\n                                fontSize: '18px',\n                                color: 'black',\n                            }}\n                        ></Table>\n                    </Card>\n                )}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}