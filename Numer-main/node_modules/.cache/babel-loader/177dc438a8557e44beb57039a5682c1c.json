{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karwi\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\numer\\\\Numer-main\\\\src\\\\Interpolation\\\\Lagrange.js\";\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Card, Input, Button, Table } from 'antd';\nimport { addStyles } from 'react-mathquill';\nimport Graph from '../components/Graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naddStyles();\nvar dataInTable = [];\nvar columns2 = [{\n  title: 'Ans',\n  dataIndex: 'Ans',\n  key: 'Ans'\n}];\nvar columns1 = [{\n  title: 'No.',\n  dataIndex: 'no',\n  key: 'no'\n}, {\n  title: 'X',\n  dataIndex: 'x',\n  key: 'x'\n}, {\n  title: 'Y',\n  dataIndex: 'y',\n  key: 'y'\n}];\nvar x = [],\n    y = [],\n    tableTag = [],\n    interpolatePoint = [],\n    tempTag = [],\n    fx;\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n    this.bi = this.bi.bind(this);\n    this.Ex = this.Ex.bind(this);\n    this.state = {\n      nPoints: null,\n      ans: [],\n      X: null,\n      rows: [],\n      interpolatePoint: null,\n      showTableInput: false,\n      showTableInpu2: false\n    };\n    this.elt = {};\n    this.calculator = {};\n    this.plot = [];\n  } //API\n\n\n  async Ex() {\n    const url = 'http://localhost:8000/data/lg';\n    const response = await fetch(url);\n    console.log(response);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      nPoints: data.col,\n      X: data.Xi,\n      interpolatePoint: data.i\n    });\n    console.log('nPoints', this.state.nPoints);\n    this.createTableInput(parseInt(this.state.nPoints));\n\n    for (var i = 0; i < this.state.nPoints; i++) {\n      document.getElementById('x' + (i + 1)).value = data.x[i];\n      document.getElementById('y' + (i + 1)).value = data.y[i];\n    }\n\n    this.createInterpolatePointInput();\n\n    for (i = 0; i < this.state.interpolatePoint; i++) {\n      document.getElementById('p' + (i + 1)).value = data.p[i];\n    }\n\n    this.forceUpdate();\n  }\n\n  componentDidMount() {//ทำอัตโนมัติหลังจาก render เสร็จ\n  }\n\n  componentDidUpdate() {}\n\n  initialValue() {\n    x = [];\n    y = [];\n\n    for (var i = 1; i <= this.state.nPoints; i++) {\n      x[i] = parseFloat(document.getElementById('x' + i).value);\n      y[i] = parseFloat(document.getElementById('y' + i).value);\n    }\n\n    for (i = 1; i <= this.state.interpolatePoint; i++) {\n      interpolatePoint[i] = parseInt(document.getElementById('p' + i).value);\n    }\n\n    console.log('initialValue');\n  }\n\n  L(X, index, n) {\n    var numerate = 1\n    /*ตัวเศษ*/\n    ,\n        denominate = 1;\n    /*ตัวส่วน*/\n\n    for (var i = 1; i <= n; i++) {\n      if (i !== index) {\n        numerate *= x[i] - X;\n        denominate *= x[i] - x[index];\n      }\n    }\n\n    console.log(numerate / denominate);\n    return parseFloat(numerate / denominate);\n  }\n\n  lagrange(n, X) {\n    fx = 0;\n    this.initialValue(); //loop set ค่า plot\n\n    for (var i = 0; i < x.length - 1; i++) {\n      this.plot[i] = {\n        x: x[i + 1],\n        y: y[i + 1]\n      };\n    }\n\n    for (var i = 1; i <= n; i++) {\n      fx += this.L(X, i, n) * y[i];\n    }\n\n    this.setState({\n      showOutputCard: true\n    });\n  }\n\n  bi() {\n    this.setState({\n      rows: this.plot\n    });\n    console.log(this.state.rows);\n    this.lagrange(parseInt(this.state.interpolatePoint), parseFloat(this.state.X));\n    dataInTable = [];\n    dataInTable.push({\n      Ans: fx\n    });\n    console.log(fx);\n    console.log('end');\n    this.forceUpdate();\n  }\n\n  createInterpolatePointInput() {\n    tempTag = [];\n\n    for (var i = 1; i <= this.state.interpolatePoint; i++) {\n      tempTag.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: '14%',\n          height: '50%',\n          backgroundColor: 'black',\n          marginInlineEnd: '5%',\n          marginBlockEnd: '5%',\n          color: 'white',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        id: 'p' + i,\n        placeholder: 'p' + i\n      }, 'p' + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this));\n    }\n\n    this.setState({\n      showTableInput2: true\n    });\n  }\n\n  createTableInput(n) {\n    x = [];\n    y = [];\n    tableTag = [];\n\n    for (var i = 1; i <= n; i++) {\n      x.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: '100%',\n          height: '50%',\n          backgroundColor: 'black',\n          marginInlineEnd: '5%',\n          marginBlockEnd: '5%',\n          color: 'white',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        id: 'x' + i,\n        placeholder: 'x' + i\n      }, 'x' + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this));\n      y.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: '100%',\n          height: '50%',\n          backgroundColor: 'black',\n          marginInlineEnd: '5%',\n          marginBlockEnd: '5%',\n          color: 'white',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        id: 'y' + i,\n        placeholder: 'y' + i\n      }, 'y' + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this));\n      tableTag.push({\n        no: i,\n        x: x[i - 1],\n        y: y[i - 1]\n      });\n    }\n\n    this.setState({\n      showTableInput: true\n    });\n    console.log(x, y, tableTag);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lagrange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Graphpy\",\n        children: [console.log(this.state.rows), /*#__PURE__*/_jsxDEV(Graph, {\n          data: this.state.rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Number of points (n)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: async e => {\n                await this.setState({\n                  nPoints: e.target.value\n                });\n                this.createTableInput(parseInt(this.state.nPoints));\n                this.forceUpdate();\n              },\n              value: this.state.nPoints,\n              name: \"nPoints\",\n              placeholder: \"Number of points (n)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => {\n                this.setState({\n                  X: e.target.value\n                });\n                this.forceUpdate();\n              },\n              value: this.state.X,\n              name: \"X\",\n              placeholder: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"interpolatePoint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: async e => {\n                await this.setState({\n                  interpolatePoint: e.target.value\n                });\n                this.createInterpolatePointInput();\n                this.forceUpdate();\n              },\n              value: this.state.interpolatePoint,\n              name: \"interpolatePoint\",\n              placeholder: \"interpolatePoint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.bi,\n              type: \"primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginLeft: '73%',\n                backgroundColor: '#76D7C4',\n                borderColor: '#76D7C4'\n              },\n              onClick: this.Ex,\n              type: \"primary\",\n              children: \"Example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.showTableInput && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              columns: columns1,\n              dataSource: tableTag,\n              pagination: false,\n              bordered: true,\n              bodyStyle: {\n                fontWeight: 'bold',\n                fontSize: '18px',\n                color: 'white',\n                overflowY: 'scroll',\n                minWidth: 120,\n                maxHeight: 300\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), this.state.showTableInput2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"interpolatePoint\", ' ', parseInt(this.state.interpolatePoint) === 2 ? '(Linear)' : parseInt(this.state.interpolatePoint) === 3 ? '(Quadratic)' : '(Polynomial)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }, this), tempTag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: 'Output',\n        bordered: true,\n        style: {\n          width: '100%',\n          background: '#2196f3',\n          color: '#FFFFFFFF'\n        },\n        id: \"outputCard\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          pagination: {\n            defaultPageSize: 5\n          },\n          columns: columns2,\n          dataSource: dataInTable,\n          pagination1: false,\n          bordered: true,\n          bodyStyle: {\n            fontWeight: 'bold',\n            fontSize: '18px',\n            color: 'black'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/karwi/OneDrive/เดสก์ท็อป/numer/Numer-main/src/Interpolation/Lagrange.js"],"names":["React","Component","Card","Input","Button","Table","addStyles","Graph","dataInTable","columns2","title","dataIndex","key","columns1","x","y","tableTag","interpolatePoint","tempTag","fx","Test","constructor","props","bi","bind","Ex","state","nPoints","ans","X","rows","showTableInput","showTableInpu2","elt","calculator","plot","url","response","fetch","console","log","data","json","setState","col","Xi","i","createTableInput","parseInt","document","getElementById","value","createInterpolatePointInput","p","forceUpdate","componentDidMount","componentDidUpdate","initialValue","parseFloat","L","index","n","numerate","denominate","lagrange","length","showOutputCard","push","Ans","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","color","fontSize","fontWeight","showTableInput2","no","render","e","target","marginLeft","borderColor","overflowY","minWidth","maxHeight","background","defaultPageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'antd/dist/antd.css'\nimport { Card, Input, Button, Table } from 'antd'\nimport { addStyles } from 'react-mathquill'\nimport Graph from '../components/Graph'\n\naddStyles()\n\nvar dataInTable = []\nvar columns2 = [\n    {\n        title: 'Ans',\n        dataIndex: 'Ans',\n        key: 'Ans',\n    },\n]\n\nvar columns1 = [\n    {\n        title: 'No.',\n        dataIndex: 'no',\n        key: 'no',\n    },\n    {\n        title: 'X',\n        dataIndex: 'x',\n        key: 'x',\n    },\n    {\n        title: 'Y',\n        dataIndex: 'y',\n        key: 'y',\n    },\n]\nvar x = [],\n    y = [],\n    tableTag = [],\n    interpolatePoint = [],\n    tempTag = [],\n    fx\n\nexport default class Test extends Component {\n    constructor(props) {\n        super(props)\n        this.bi = this.bi.bind(this)\n        this.Ex = this.Ex.bind(this)\n        this.state = {\n            nPoints: null,\n            ans: [],\n            X: null,\n            rows: [],\n            interpolatePoint: null,\n            showTableInput: false,\n            showTableInpu2: false,\n        }\n        this.elt = {}\n        this.calculator = {}\n        this.plot = []\n    }\n\n    //API\n    async Ex() {\n        const url = 'http://localhost:8000/data/lg'\n        const response = await fetch(url)\n        console.log(response)\n        const data = await response.json()\n        console.log(data)\n        this.setState({\n            nPoints: data.col,\n            X: data.Xi,\n            interpolatePoint: data.i,\n        })\n        console.log('nPoints', this.state.nPoints)\n        this.createTableInput(parseInt(this.state.nPoints))\n\n        for (var i = 0; i < this.state.nPoints; i++) {\n            document.getElementById('x' + (i + 1)).value = data.x[i]\n            document.getElementById('y' + (i + 1)).value = data.y[i]\n        }\n\n        this.createInterpolatePointInput()\n        for (i = 0; i < this.state.interpolatePoint; i++) {\n            document.getElementById('p' + (i + 1)).value = data.p[i]\n        }\n        this.forceUpdate()\n    }\n\n    componentDidMount() {\n        //ทำอัตโนมัติหลังจาก render เสร็จ\n    }\n    componentDidUpdate() {}\n\n    initialValue() {\n        x = []\n        y = []\n        for (var i = 1; i <= this.state.nPoints; i++) {\n            x[i] = parseFloat(document.getElementById('x' + i).value)\n            y[i] = parseFloat(document.getElementById('y' + i).value)\n        }\n        for (i = 1; i <= this.state.interpolatePoint; i++) {\n            interpolatePoint[i] = parseInt(\n                document.getElementById('p' + i).value\n            )\n        }\n        console.log('initialValue')\n    }\n\n    L(X, index, n) {\n        var numerate = 1 /*ตัวเศษ*/,\n            denominate = 1 /*ตัวส่วน*/\n        for (var i = 1; i <= n; i++) {\n            if (i !== index) {\n                numerate *= x[i] - X\n                denominate *= x[i] - x[index]\n            }\n        }\n        console.log(numerate / denominate)\n        return parseFloat(numerate / denominate)\n    }\n\n    lagrange(n, X) {\n        fx = 0\n        this.initialValue()\n        //loop set ค่า plot\n        for (var i = 0; i < x.length - 1; i++) {\n            this.plot[i] = { x: x[i + 1], y: y[i + 1] }\n        }\n        for (var i = 1; i <= n; i++) {\n            fx += this.L(X, i, n) * y[i]\n        }\n        this.setState({\n            showOutputCard: true,\n        })\n    }\n\n    bi() {\n        this.setState({ rows: this.plot })\n        console.log(this.state.rows)\n        this.lagrange(\n            parseInt(this.state.interpolatePoint),\n            parseFloat(this.state.X)\n        )\n        dataInTable = []\n        dataInTable.push({\n            Ans: fx,\n        })\n\n        console.log(fx)\n        console.log('end')\n        this.forceUpdate()\n    }\n\n    createInterpolatePointInput() {\n        tempTag = []\n        for (var i = 1; i <= this.state.interpolatePoint; i++) {\n            tempTag.push(\n                <Input\n                    style={{\n                        width: '14%',\n                        height: '50%',\n                        backgroundColor: 'black',\n                        marginInlineEnd: '5%',\n                        marginBlockEnd: '5%',\n                        color: 'white',\n                        fontSize: '18px',\n                        fontWeight: 'bold',\n                    }}\n                    id={'p' + i}\n                    key={'p' + i}\n                    placeholder={'p' + i}\n                />\n            )\n        }\n        this.setState({\n            showTableInput2: true,\n        })\n    }\n\n    createTableInput(n) {\n        x = []\n        y = []\n        tableTag = []\n        for (var i = 1; i <= n; i++) {\n            x.push(\n                <Input\n                    style={{\n                        width: '100%',\n                        height: '50%',\n                        backgroundColor: 'black',\n                        marginInlineEnd: '5%',\n                        marginBlockEnd: '5%',\n                        color: 'white',\n                        fontSize: '18px',\n                        fontWeight: 'bold',\n                    }}\n                    id={'x' + i}\n                    key={'x' + i}\n                    placeholder={'x' + i}\n                />\n            )\n            y.push(\n                <Input\n                    style={{\n                        width: '100%',\n                        height: '50%',\n                        backgroundColor: 'black',\n                        marginInlineEnd: '5%',\n                        marginBlockEnd: '5%',\n                        color: 'white',\n                        fontSize: '18px',\n                        fontWeight: 'bold',\n                    }}\n                    id={'y' + i}\n                    key={'y' + i}\n                    placeholder={'y' + i}\n                />\n            )\n            tableTag.push({\n                no: i,\n                x: x[i - 1],\n                y: y[i - 1],\n            })\n        }\n        this.setState({\n            showTableInput: true,\n        })\n        console.log(x, y, tableTag)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Lagrange</h1>\n                <div className=\"Graphpy\">\n                    {console.log(this.state.rows)}\n                    <Graph data={this.state.rows} />\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div>\n                            <p>Number of points (n)</p>\n                            <Input\n                                onChange={async (e) => {\n                                    await this.setState({\n                                        nPoints: e.target.value,\n                                    })\n                                    this.createTableInput(\n                                        parseInt(this.state.nPoints)\n                                    )\n                                    this.forceUpdate()\n                                }}\n                                value={this.state.nPoints}\n                                name=\"nPoints\"\n                                placeholder=\"Number of points (n)\"\n                            />\n                            <p>X</p>\n                            <Input\n                                onChange={(e) => {\n                                    this.setState({ X: e.target.value })\n                                    this.forceUpdate()\n                                }}\n                                value={this.state.X}\n                                name=\"X\"\n                                placeholder=\"X\"\n                            />\n                            <p>interpolatePoint</p>\n                            <Input\n                                onChange={async (e) => {\n                                    await this.setState({\n                                        interpolatePoint: e.target.value,\n                                    })\n                                    this.createInterpolatePointInput()\n                                    this.forceUpdate()\n                                }}\n                                value={this.state.interpolatePoint}\n                                name=\"interpolatePoint\"\n                                placeholder=\"interpolatePoint\"\n                            />\n                            <br></br>\n                            <br></br>\n                            <Button onClick={this.bi} type=\"primary\">\n                                Submit\n                            </Button>\n                            <Button\n                                style={{\n                                    marginLeft: '73%',\n                                    backgroundColor: '#76D7C4',\n                                    borderColor: '#76D7C4',\n                                }}\n                                onClick={this.Ex}\n                                type=\"primary\"\n                            >\n                                Example\n                            </Button>\n                        </div>\n                        <br></br>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showTableInput && (\n                            <div>\n                                <Table\n                                    columns={columns1}\n                                    dataSource={tableTag}\n                                    pagination={false}\n                                    bordered={true}\n                                    bodyStyle={{\n                                        fontWeight: 'bold',\n                                        fontSize: '18px',\n                                        color: 'white',\n                                        overflowY: 'scroll',\n                                        minWidth: 120,\n                                        maxHeight: 300,\n                                    }}\n                                ></Table>\n                            </div>\n                        )}\n                    </div>\n                </div>\n                {this.state.showTableInput2 && (\n                    <div>\n                        <h2>\n                            interpolatePoint{' '}\n                            {parseInt(this.state.interpolatePoint) === 2\n                                ? '(Linear)'\n                                : parseInt(this.state.interpolatePoint) === 3\n                                ? '(Quadratic)'\n                                : '(Polynomial)'}\n                        </h2>\n                        {tempTag}\n                    </div>\n                )}\n\n                <Card\n                    title={'Output'}\n                    bordered={true}\n                    style={{\n                        width: '100%',\n                        background: '#2196f3',\n                        color: '#FFFFFFFF',\n                    }}\n                    id=\"outputCard\"\n                >\n                    <Table\n                        pagination={{ defaultPageSize: 5 }}\n                        columns={columns2}\n                        dataSource={dataInTable}\n                        pagination1={false}\n                        bordered={true}\n                        bodyStyle={{\n                            fontWeight: 'bold',\n                            fontSize: '18px',\n                            color: 'black',\n                        }}\n                    ></Table>\n                </Card>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}