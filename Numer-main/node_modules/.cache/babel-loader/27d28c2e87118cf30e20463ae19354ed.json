{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.letters = undefined;\nexports.toUpperCase = toUpperCase;\nexports.isUpperCase = isUpperCase;\nexports.getSymbol = getSymbol;\nexports.getName = getName;\nexports.convertSymbols = convertSymbols;\n\nvar _logger = require('../logger');\n\nvar letters = exports.letters = [{\n  name: 'alpha',\n  symbol: 'α'\n}, {\n  name: 'beta',\n  symbol: 'β'\n}, {\n  name: 'gamma',\n  symbol: 'γ'\n}, {\n  name: 'delta',\n  symbol: 'δ'\n}, {\n  name: 'epsilon',\n  symbol: 'ϵ'\n}, {\n  name: 'zeta',\n  symbol: 'ζ'\n}, {\n  name: 'eta',\n  symbol: 'η'\n}, {\n  name: 'theta',\n  symbol: 'θ'\n}, {\n  name: 'iota',\n  symbol: 'ι'\n}, {\n  name: 'kappa',\n  symbol: 'κ'\n}, {\n  name: 'lambda',\n  symbol: 'λ'\n}, {\n  name: 'mu',\n  symbol: 'μ'\n}, {\n  name: 'nu',\n  symbol: 'ν'\n}, {\n  name: 'omicron',\n  symbol: 'ο'\n}, {\n  name: 'pi',\n  symbol: 'π'\n}, {\n  name: 'rho',\n  symbol: 'ρ'\n}, {\n  name: 'sigma',\n  symbol: 'σ'\n}, {\n  name: 'tau',\n  symbol: 'τ'\n}, {\n  name: 'upsilon',\n  symbol: 'υ'\n}, {\n  name: 'phi',\n  symbol: 'ϕ'\n}, {\n  name: 'chi',\n  symbol: 'χ'\n}, {\n  name: 'psi',\n  symbol: 'ψ'\n}, {\n  name: 'omega',\n  symbol: 'ω'\n}];\n\nfunction toUpperCase(x) {\n  return x.charAt(0).toUpperCase() + x.slice(1);\n}\n\nfunction isUpperCase(x) {\n  return x.charAt(0).toUpperCase() === x.charAt(0);\n}\n\nfunction getSymbol(name) {\n  var symbol = letters.find(function (x) {\n    return x.name === name.toLowerCase();\n  });\n  if (typeof symbol === 'undefined') return null;\n  symbol = symbol.symbol;\n  if (isUpperCase(name)) symbol = toUpperCase(symbol);\n  return symbol;\n}\n\nfunction getName(symbol) {\n  var name = letters.find(function (x) {\n    return x.symbol === symbol.toLowerCase();\n  });\n  if (typeof name === 'undefined') return null;\n  name = name.name;\n  if (isUpperCase(symbol)) name = toUpperCase(name);\n  return name;\n}\n\nfunction convertSymbols(math) {\n  (0, _logger.debug)('Converting math symbols ' + math);\n  letters.forEach(function (letter) {\n    math = math.split(letter.symbol).join(letter.name);\n    math = math.split(toUpperCase(letter.symbol)).join(toUpperCase(letter.name));\n  });\n  (0, _logger.debug)('Converted math symbols ' + math);\n  return math;\n}\n\nexports.default = letters;","map":{"version":3,"sources":["C:/Users/karwi/OneDrive/เดสก์ท็อป/numer/Numer-main/node_modules/algebra-latex/lib/models/greek-letters.js"],"names":["Object","defineProperty","exports","value","letters","undefined","toUpperCase","isUpperCase","getSymbol","getName","convertSymbols","_logger","require","name","symbol","x","charAt","slice","find","toLowerCase","math","debug","forEach","letter","split","join","default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.letters = undefined;\nexports.toUpperCase = toUpperCase;\nexports.isUpperCase = isUpperCase;\nexports.getSymbol = getSymbol;\nexports.getName = getName;\nexports.convertSymbols = convertSymbols;\n\nvar _logger = require('../logger');\n\nvar letters = exports.letters = [{\n  name: 'alpha',\n  symbol: 'α'\n}, {\n  name: 'beta',\n  symbol: 'β'\n}, {\n  name: 'gamma',\n  symbol: 'γ'\n}, {\n  name: 'delta',\n  symbol: 'δ'\n}, {\n  name: 'epsilon',\n  symbol: 'ϵ'\n}, {\n  name: 'zeta',\n  symbol: 'ζ'\n}, {\n  name: 'eta',\n  symbol: 'η'\n}, {\n  name: 'theta',\n  symbol: 'θ'\n}, {\n  name: 'iota',\n  symbol: 'ι'\n}, {\n  name: 'kappa',\n  symbol: 'κ'\n}, {\n  name: 'lambda',\n  symbol: 'λ'\n}, {\n  name: 'mu',\n  symbol: 'μ'\n}, {\n  name: 'nu',\n  symbol: 'ν'\n}, {\n  name: 'omicron',\n  symbol: 'ο'\n}, {\n  name: 'pi',\n  symbol: 'π'\n}, {\n  name: 'rho',\n  symbol: 'ρ'\n}, {\n  name: 'sigma',\n  symbol: 'σ'\n}, {\n  name: 'tau',\n  symbol: 'τ'\n}, {\n  name: 'upsilon',\n  symbol: 'υ'\n}, {\n  name: 'phi',\n  symbol: 'ϕ'\n}, {\n  name: 'chi',\n  symbol: 'χ'\n}, {\n  name: 'psi',\n  symbol: 'ψ'\n}, {\n  name: 'omega',\n  symbol: 'ω'\n}];\n\nfunction toUpperCase(x) {\n  return x.charAt(0).toUpperCase() + x.slice(1);\n}\n\nfunction isUpperCase(x) {\n  return x.charAt(0).toUpperCase() === x.charAt(0);\n}\n\nfunction getSymbol(name) {\n  var symbol = letters.find(function (x) {\n    return x.name === name.toLowerCase();\n  });\n  if (typeof symbol === 'undefined') return null;\n  symbol = symbol.symbol;\n  if (isUpperCase(name)) symbol = toUpperCase(symbol);\n  return symbol;\n}\n\nfunction getName(symbol) {\n  var name = letters.find(function (x) {\n    return x.symbol === symbol.toLowerCase();\n  });\n  if (typeof name === 'undefined') return null;\n  name = name.name;\n  if (isUpperCase(symbol)) name = toUpperCase(name);\n  return name;\n}\n\nfunction convertSymbols(math) {\n  (0, _logger.debug)('Converting math symbols ' + math);\n  letters.forEach(function (letter) {\n    math = math.split(letter.symbol).join(letter.name);\n    math = math.split(toUpperCase(letter.symbol)).join(toUpperCase(letter.name));\n  });\n  (0, _logger.debug)('Converted math symbols ' + math);\n  return math;\n}\n\nexports.default = letters;"]},"metadata":{},"sourceType":"script"}